#include <algorithm>
#include <fstream>
#include <iostream>
#include <utility>
#include <vector>

struct point
{
	int x; //Defining int variables for x- and y-values
	int y;
};

std::ostream& operator << (std::ostream& os, point p) //Assigns the x- and y-values in the coordinates to an int
{
	return os << "(" << p.x << ", " << p.y << ")";
}

std::istream& operator >> (std::istream& is, point& p) //Ignores the comma in the coordinate
{
	(is >> p.x >> std::ws).ignore();        // ','

	return is;
}

int distance (const point& a, const point& b) //Calculating distance between each set of coordinates
{
	int diffOfX = a.x - b.x; //Distance for x
	int diffOfY = a.y - b.y; //Distance for y

	return (diffOfX * diffOfX) + (diffOfY * diffOfY); //Returns distance
}

int main() //Main statement
{
	std::ifstream myfile("pathf.txt"); //Reads textfile

	using pair_type = std::pair<int, point>;
	std::vector<pair_type> points;

	point origin;

	if (myfile >> origin)
	{
		point pt = origin;

		do
		{
			points.push_back(std::make_pair(distance(origin, pt), pt));
		}

		while (myfile >> pt);
	}

	std::sort(points.begin(), points.end(), [](pair_type& a, pair_type& b) { return a.first < b.first; });

	for (auto pair : points)
	{
		std::cout << pair.second << '\n';
	}
}
